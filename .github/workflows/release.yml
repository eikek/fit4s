name: Release
on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - uses: cachix/install-nix-action@v31

      - name: Set current version
        id: version
        shell: bash
        run: |
          nix develop .#ci --command mill --no-daemon writeVersion
          FIT4S_VERSION=$(cat out/writeVersion.dest/version.txt)
          echo "FIT4S_VERSION=${FIT4S_VERSION}" >> $GITHUB_ENV

          if [ -z "${FIT4S_VERSION}" ]; then
            echo "Version not set!"
            exit 1
          fi

      - name: Create zip cli package (${{ env.FIT4S_VERSION }})
        run: nix develop .#ci --command mill --no-daemon  cli.universalPackageZip

      - name: Publish library to Maven Central (${{ env.FIT4S_VERSION }})
        if: startsWith(github.ref, 'refs/tags/')
        run: nix develop .#ci --command mill --no-daemon  __.publishSonatypeCentral
        env:
          MILL_PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          MILL_PGP_SECRET_BASE64: ${{ secrets.PGP_SECRET }}
          MILL_SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MILL_SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

      - name: Publish Release (${{ env.FIT4S_VERSION }})
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: out/cli/universalPackageZip.dest/fit4s-${{ env.FIT4S_VERSION }}.zip
      - name: Publish Pre-Release
        uses: ncipollo/release-action@v1
        if: ${{ github.ref }} == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          allowUpdates: true
          tag: "nightly"
          commit: "main"
          body: "Floating tag associating the latest build from the main branch"
          name: "fit4s nightly"
          replacesArtifacts: true
          removeArtifacts: true
          artifacts: out/cli/universalPackageZip.dest/fit4s-${{ env.FIT4S_VERSION }}.zip
